/**
 * Copyright 2005-2011, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */
package de.bielefeld.umweltamt.aui.mappings.elka_sync;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.fasterxml.jackson.annotation.JsonIgnore;

import de.bielefeld.umweltamt.aui.mappings.DatabaseAccess;
import de.bielefeld.umweltamt.aui.mappings.DatabaseQuery;
import de.bielefeld.umweltamt.aui.mappings.elka.Anfallstelle;
import de.bielefeld.umweltamt.aui.mappings.elka.Referenz;
import de.bielefeld.umweltamt.aui.mappings.oberflgw.AfsNiederschlagswasser;
import de.bielefeld.umweltamt.aui.mappings.oberflgw.AfsStoffe;
import de.bielefeld.umweltamt.aui.HibernateSessionFactory;

// Generated 22.10.2015 16:17:13 by Hibernate Tools 3.4.0.CR1

/**
 * EAnfallstelle generated by hbm2java
 */
public class EAfsNiederschlagswasser implements java.io.Serializable {

    private Integer nr;
    private Integer origNr;
    private EAnfallstelle anfallstelle;
    private EEntwaesserungsgrundstueck entwaesserungsgrundstueck;
    private String bezeichnung;
    private Integer befFlaeche;
    private Integer nwHerBereichOpt;
	private Float abflussmenge;


    public EAfsNiederschlagswasser() {
    }

    public EAfsNiederschlagswasser(Integer nr) {
        this.nr = nr;
    }

    public EAfsNiederschlagswasser(Integer nr, Integer origNr,
    		EAnfallstelle anfallstelle, EEntwaesserungsgrundstueck entwaesserungsgrundstueck,
            String bezeichnung, Integer befFlaeche, Integer nwHerBereichOpt, Float abflussmenge) {
        this.nr = nr;
        this.origNr = origNr;
        this.anfallstelle = anfallstelle;
        this.entwaesserungsgrundstueck = entwaesserungsgrundstueck;
        this.bezeichnung = bezeichnung;
        this.befFlaeche = befFlaeche;
        this.nwHerBereichOpt = nwHerBereichOpt;
        this.abflussmenge = abflussmenge;
    }

    public Integer getNr() {
        return this.nr;
    }

    public void setNr(Integer nr) {
        this.nr = nr;
    }

    @JsonIgnore
    public Integer getOrigNr() {
        return this.origNr;
    }

    @JsonIgnore
    public void setOrigNr(Integer origNr) {
        this.origNr = origNr;
    }

    public EAnfallstelle getAnfallstelle() {
        return this.anfallstelle;
    }

    public void setAnfallstelle(EAnfallstelle anfallstelle) {
        this.anfallstelle = anfallstelle;
    }

    public EEntwaesserungsgrundstueck getEntwaesserungsgrundstueck() {
        return this.entwaesserungsgrundstueck;
    }

    public void setEntwaesserungsgrundstueck(EEntwaesserungsgrundstueck entwaesserungsgrundstueck) {
        this.entwaesserungsgrundstueck = entwaesserungsgrundstueck;
    }

    public String getBezeichnung() {
        return this.bezeichnung;
    }

    public void setBezeichnung(String bezeichnung) {
        this.bezeichnung = bezeichnung;
    }

    public Integer getBefFlaeche() {
        return this.befFlaeche;
    }

    public void setBefFlaeche(Integer befFlaeche) {
        this.befFlaeche = befFlaeche;
    }

    public Integer getNwHerBereichOpt() {
        return this.nwHerBereichOpt;
    }

    public void setNwHerBereichOpt(Integer nwHerBereichOpt) {
        this.nwHerBereichOpt = nwHerBereichOpt;
    }

    public Float getAbflussmenge() {
        return this.abflussmenge;
    }

    public void setAbflussmenge(Float abflussmenge) {
        this.abflussmenge = abflussmenge;
    }
    /**
     * Update this EAbwasserbehandlungsanlage with its new values.<br>
     * This is meant to be used after merging!
     * @param copy AtlKlaeranlagen
     */
    private void copy(EAfsNiederschlagswasser copy) {
        this.bezeichnung = copy.getBezeichnung();
        this.anfallstelle = copy.getAnfallstelle();
        this.nr = copy.getNr();
        this.entwaesserungsgrundstueck = copy.getEntwaesserungsgrundstueck();
        this.befFlaeche = copy.getBefFlaeche();
        this.nwHerBereichOpt = copy.getNwHerBereichOpt();
        this.abflussmenge = copy.getAbflussmenge();
        }
    /**
     * Find an <code>AtlKlaeranlagen</code> instance by its primary key
     * @param id the primary key value
     * @return <code>AtlKlaeranlagen</code> the requested instance,
     * if one exists,
     * <code>null</code> otherwise
     */
    public static EAfsNiederschlagswasser findById(java.lang.Integer id) {
        return (EAfsNiederschlagswasser)
            new DatabaseAccess().get(EAfsNiederschlagswasser.class, id);
    }

    /**
     * Get a list of all <code>EAnfallstelle</code>
     * @return <code>List&lt;EAnfallstelle&gt;</code>
     *         all <code>EAnfallstelle</code>
     */
    public static List<EAfsNiederschlagswasser> getAll() {
        return DatabaseQuery.getAll(new EAfsNiederschlagswasser());
    }

    /* Custom code goes below here! */

    /**
     * Get the Anfallstelle instance on which this view instance is based on
     * @return The Anfallsstelle instance
     */
//    @JsonIgnore
//    public Anfallstelle getAnfallstelle() {
//        if (anfallstelle == null) {
//            Integer origId = getOrigNr() != null ? getOrigNr() : getNr();
//            List<Anfallstelle> result = HibernateSessionFactory.currentSession().createQuery(
//                    "from Anfallstelle where objektid=" + origId).list();
//            if (result.size() > 0) {
//                anfallstelle = (Anfallstelle) result.get(0);
//            } else {
//                anfallstelle = null;
//            }
//        }
//        return anfallstelle;
//
//    }

    /**
     * Returns the AfsNiederschlagwasser instances connected to the Anfallstelle table entry
     * on which this instance is based on.
     * @return The instances as set
     */
//    public Set<AfsNiederschlagswasser> getAfsNiederschlagswassers() {
//        Anfallstelle afs = getAnfallstelle();
//        return afs != null ? afs.getAfsNiederschlagswassers() : null;
//    }

    /**
     * Returns the AfsStoffe instances connected to the Anfallstelle table entry
     * on which this instance is based on.
     * @return The instances as set
     */
//    public Set<AfsStoffe> getAfsStoffes() {
//        Anfallstelle afs = getAnfallstelle();
//        return afs != null ? afs.getAfsStoffes() : null;
//    }
}
