/**
 * Copyright 2005-2011, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */
package de.bielefeld.umweltamt.aui.mappings.elka_sync;

// Generated 22.10.2015 16:17:13 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.fasterxml.jackson.annotation.JsonIgnore;

import de.bielefeld.umweltamt.aui.mappings.DatabaseAccess;
import de.bielefeld.umweltamt.aui.mappings.DatabaseQuery;

/**
 * EProbenahme generated by hbm2java
 */
public class EProbenahme implements java.io.Serializable {

	private Integer nr;
	private Integer origNr;
	private String beschreibung;
	private Date probeDat;
	private String probeId;
	private Boolean selbstueberwTog;
	private String bemerkung;
	private Date aktualDat;
	private Date erstellDat;
	private String herkunft;
	private Set<EProbenahmeUeberwachungsergeb> probenahmeUeberwachungsergebs =
		new HashSet<EProbenahmeUeberwachungsergeb>(0);

	public EProbenahme() {
	}

	public EProbenahme(Integer nr) {
		this.nr = nr;
	}

	public EProbenahme(Integer nr, Integer origNr,
			EMessstelle messstelle, String beschreibung,
			Date probeDat, String probeId,
			Boolean selbstueberwTog, String bemerkung, Date aktualDat,
			Date erstellDat, String herkunft) {
		this.nr = nr;
		this.origNr = origNr;
		this.beschreibung = beschreibung;
		this.probeDat = probeDat;
		this.probeId = probeId;
		this.selbstueberwTog = selbstueberwTog;
		this.bemerkung = bemerkung;
		this.aktualDat = aktualDat;
		this.erstellDat = erstellDat;
		this.herkunft = herkunft;
	}

	public Integer getNr() {
		return this.nr;
	}

	public void setNr(Integer nr) {
		this.nr = nr;
	}

	@JsonIgnore
	public Integer getOrigNr() {
		return this.origNr;
	}

	@JsonIgnore
	public void setOrigNr(Integer origNr) {
		this.origNr = origNr;
	}

	public String getBeschreibung() {
		return this.beschreibung;
	}

	public void setBeschreibung(String beschreibung) {
		this.beschreibung = beschreibung;
	}

	public Date getProbeDat() {
		return this.probeDat;
	}

	public void setProbeDat(Date probeDat) {
		this.probeDat = probeDat;
	}

	public String getProbeId() {
		return this.probeId;
	}

	public void setProbeId(String probeId) {
		this.probeId = probeId;
	}

	public Boolean getSelbstueberwTog() {
		return this.selbstueberwTog;
	}

	public void setSelbstueberwTog(Boolean selbstueberwTog) {
		this.selbstueberwTog = selbstueberwTog;
	}

	public String getBemerkung() {
		return this.bemerkung;
	}

	public void setBemerkung(String bemerkung) {
		this.bemerkung = bemerkung;
	}

	public Date getAktualDat() {
		return this.aktualDat;
	}

	public void setAktualDat(Date aktualDat) {
		this.aktualDat = aktualDat;
	}

	public Date getErstellDat() {
		return this.erstellDat;
	}

	public void setErstellDat(Date erstellDat) {
		this.erstellDat = erstellDat;
	}

	public String getHerkunft() {
		return this.herkunft;
	}

	public void setHerkunft(String herkunft) {
		this.herkunft = herkunft;
	}

    /**
     * Update this {@link EProbenahme} with its new values.<br>
     * This is meant to be used after merging!
     * @param copy {@link EProbenahme}
     */
    private void copy(EProbenahme copy) {
    	this.bemerkung = copy.getBemerkung();
    	this.beschreibung = copy.getBeschreibung();
    	this.nr = copy.getNr();
    	this.probeDat = copy.getProbeDat();
    	this.probeId = copy.getProbeId();
    	this.aktualDat = copy.getAktualDat();
    	this.erstellDat = copy.getErstellDat();
    	this.herkunft = copy.getHerkunft();
    	this.selbstueberwTog = copy.getSelbstueberwTog();
    	this.probenahmeUeberwachungsergebs =
    		copy.getProbenahmeUeberwachungsergebs();
    }

    /**
     * Find an <code>EProbenahme</code> instance by its primary key
     * @param id the primary key value
     * @return <code>EProbenahme</code> the requested instance,
     *         if one exists,
     *         <code>null</code> otherwise
     */
    public static EProbenahme findById(java.lang.Integer id) {
        return (EProbenahme)
            new DatabaseAccess().get(EProbenahme.class, id);
    }

    /**
     * Get a list of all <code>EProbenahme</code>
     * @return <code>List&lt;EProbenahme&gt;</code>
     *         all <code>EProbenahme</code>
     */
    public static List<EProbenahme> getAll() {
        return DatabaseQuery.getAll(new EProbenahme());
    }

	public Set<EProbenahmeUeberwachungsergeb> getProbenahmeUeberwachungsergebs() {
		return probenahmeUeberwachungsergebs;
	}

	public void setProbenahmeUeberwachungsergebs(
			Set<EProbenahmeUeberwachungsergeb> probenahmeUeberwachungsergebs) {
		this.probenahmeUeberwachungsergebs = probenahmeUeberwachungsergebs;
	}


}
